// <auto-generated />
using System;
using AlphaCredit.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlphaCredit.Api.Migrations
{
    [DbContext(typeof(AlphaCreditDbContext))]
    [Migration("20251021165317_database")]
    partial class database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("actividadcnbsid");

            modelBuilder.HasSequence("actividadeconomicaid");

            modelBuilder.HasSequence("bancoid");

            modelBuilder.HasSequence("componenteprestamoid");

            modelBuilder.HasSequence("cuentabancariaid");

            modelBuilder.HasSequence("destinocreditoid");

            modelBuilder.HasSequence("empresaid");

            modelBuilder.HasSequence("estadocivilid");

            modelBuilder.HasSequence("estadocomponenteid");

            modelBuilder.HasSequence("estadogarantiaid");

            modelBuilder.HasSequence("estadoprestamoid");

            modelBuilder.HasSequence("fechasistemaid");

            modelBuilder.HasSequence("fondoid");

            modelBuilder.HasSequence("fondomovimientoid");

            modelBuilder.HasSequence("formapagoid");

            modelBuilder.HasSequence("frecuenciapagoid");

            modelBuilder.HasSequence("garantiaid");

            modelBuilder.HasSequence("monedaid");

            modelBuilder.HasSequence("movimientoprestamoid");

            modelBuilder.HasSequence("operadortelefonoid");

            modelBuilder.HasSequence("paisid");

            modelBuilder.HasSequence("parametrossistemaid");

            modelBuilder.HasSequence("personaactividadid");

            modelBuilder.HasSequence("personaconyugeid");

            modelBuilder.HasSequence("personaid");

            modelBuilder.HasSequence("personareferenciaid");

            modelBuilder.HasSequence("personatelefonosid");

            modelBuilder.HasSequence("prestamocomponenteid");

            modelBuilder.HasSequence("prestamogarantiaid");

            modelBuilder.HasSequence("prestamoid");

            modelBuilder.HasSequence("sexoid");

            modelBuilder.HasSequence("sucursalid");

            modelBuilder.HasSequence("tipocuentaid");

            modelBuilder.HasSequence("tipofondoid");

            modelBuilder.HasSequence("tipogarantiaid");

            modelBuilder.HasSequence("tipoidentificacionid");

            modelBuilder.HasSequence("transaccionid");

            modelBuilder.HasSequence("ubicaciongeograficaid");

            modelBuilder.Entity("AlphaCredit.Api.Models.ActividadCnbs", b =>
                {
                    b.Property<long>("ActividadCnbsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("actividadcnbsid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ActividadCnbsId"));

                    b.Property<string>("ActividadCnbsCodigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("actividadcnbscodigo");

                    b.Property<string>("ActividadCnbsDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("actividadcnbsdescripcion");

                    b.Property<bool>("ActividadCnbsEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("actividadcnbsestaactiva");

                    b.Property<string>("ActividadCnbsNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("actividadcnbsnombre");

                    b.HasKey("ActividadCnbsId");

                    b.HasIndex("ActividadCnbsCodigo")
                        .IsUnique()
                        .HasDatabaseName("uactividadcnbs");

                    b.ToTable("actividadcnbs");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ActividadEconomica", b =>
                {
                    b.Property<long>("ActividadEconomicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("actividadeconomicaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ActividadEconomicaId"));

                    b.Property<long?>("ActividadCnbsId")
                        .HasColumnType("bigint")
                        .HasColumnName("actividadcnbsid");

                    b.Property<string>("ActividadEconomicaDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("actividadeconomicadescripcion");

                    b.Property<bool>("ActividadEconomicaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("actividadeconomicaestaactiva");

                    b.Property<string>("ActividadEconomicaNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("actividadeconomicanombre");

                    b.HasKey("ActividadEconomicaId");

                    b.HasIndex("ActividadCnbsId");

                    b.ToTable("actividadeconomica");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Banco", b =>
                {
                    b.Property<long>("BancoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("bancoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BancoId"));

                    b.Property<string>("BancoCodigo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("bancocodigo");

                    b.Property<bool>("BancoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("bancoestaactivo");

                    b.Property<string>("BancoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("banconombre");

                    b.HasKey("BancoId");

                    b.ToTable("banco");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ComponentePrestamo", b =>
                {
                    b.Property<long>("ComponentePrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("componenteprestamoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ComponentePrestamoId"));

                    b.Property<string>("ComponentePrestamoDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("componenteprestamodescripcion");

                    b.Property<bool>("ComponentePrestamoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("componenteprestamoestaactivo");

                    b.Property<string>("ComponentePrestamoNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("componenteprestamonombre");

                    b.Property<string>("ComponentePrestamoTipo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("componenteprestamotipo");

                    b.HasKey("ComponentePrestamoId");

                    b.ToTable("componenteprestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.CuentaBancaria", b =>
                {
                    b.Property<long>("CuentaBancariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cuentabancariaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CuentaBancariaId"));

                    b.Property<long>("BancoId")
                        .HasColumnType("bigint")
                        .HasColumnName("bancoid");

                    b.Property<bool>("CuentaBancariaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("cuentabancariaestaactiva");

                    b.Property<string>("CuentaBancariaNombre")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cuentabancarianombre");

                    b.Property<string>("CuentaBancariaNumero")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("cuentabancarianumero");

                    b.Property<decimal>("CuentaBancariaSaldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cuentabancariasaldo");

                    b.Property<long>("MonedaId")
                        .HasColumnType("bigint")
                        .HasColumnName("monedaid");

                    b.Property<long>("TipoCuentaId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipocuentaid");

                    b.HasKey("CuentaBancariaId");

                    b.HasIndex("BancoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("TipoCuentaId");

                    b.ToTable("cuentabancaria");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.DestinoCredito", b =>
                {
                    b.Property<long>("DestinoCreditoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("destinocreditoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DestinoCreditoId"));

                    b.Property<string>("DestinoCreditoDescripcion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("destinocreditodescripcion");

                    b.Property<bool>("DestinoCreditoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("destinocreditoestaactivo");

                    b.Property<string>("DestinoCreditoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("destinocreditonombre");

                    b.HasKey("DestinoCreditoId");

                    b.ToTable("destinocredito");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Empresa", b =>
                {
                    b.Property<long>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("empresaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EmpresaId"));

                    b.Property<string>("EmpresaDireccion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("empresadireccion");

                    b.Property<string>("EmpresaEmail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("empresaemail");

                    b.Property<bool>("EmpresaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("empresaestaactiva");

                    b.Property<string>("EmpresaNombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("empresanombre");

                    b.Property<string>("EmpresaRtn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("empresartn");

                    b.Property<string>("EmpresaTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("empresatelefono");

                    b.HasKey("EmpresaId");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoCivil", b =>
                {
                    b.Property<long>("EstadoCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("estadocivilid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EstadoCivilId"));

                    b.Property<string>("EstadoCivilDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("estadocivildescripcion");

                    b.Property<bool>("EstadoCivilEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("estadocivilestaactivo");

                    b.Property<string>("EstadoCivilNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("estadocivilnombre");

                    b.Property<bool>("EstadoCivilRequiereConyuge")
                        .HasColumnType("boolean")
                        .HasColumnName("estadocivilrequiereconyuge");

                    b.HasKey("EstadoCivilId");

                    b.ToTable("estadocivil");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoComponente", b =>
                {
                    b.Property<long>("EstadoComponenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("estadocomponenteid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EstadoComponenteId"));

                    b.Property<string>("EstadoComponenteDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("estadocomponentedescripcion");

                    b.Property<bool>("EstadoComponenteEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("estadocomponenteestaactivo");

                    b.Property<string>("EstadoComponenteNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("estadocomponentenombre");

                    b.HasKey("EstadoComponenteId");

                    b.ToTable("estadocomponente");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoGarantia", b =>
                {
                    b.Property<long>("EstadoGarantiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("estadogarantiaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EstadoGarantiaId"));

                    b.Property<string>("EstadoGarantiaDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("estadogarantiadescripcion");

                    b.Property<bool>("EstadoGarantiaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("estadogarantiaestaactiva");

                    b.Property<string>("EstadoGarantiaNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("estadogarantianombre");

                    b.HasKey("EstadoGarantiaId");

                    b.ToTable("estadogarantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoPrestamo", b =>
                {
                    b.Property<long>("EstadoPrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("estadoprestamoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EstadoPrestamoId"));

                    b.Property<string>("EstadoPrestamoDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("estadoprestamodescripcion");

                    b.Property<bool>("EstadoPrestamoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("estadoprestamoestaactivo");

                    b.Property<string>("EstadoPrestamoNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("estadoprestamonombre");

                    b.HasKey("EstadoPrestamoId");

                    b.ToTable("estadoprestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FechaSistema", b =>
                {
                    b.Property<long>("FechaSistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fechasistemaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FechaSistemaId"));

                    b.Property<bool>("FechaSistemaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("fechasistemaestaactiva");

                    b.Property<DateTime>("FechaSistemaFecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fechasistemafecha");

                    b.Property<DateTime>("FechaSistemaFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fechasistemafechacreacion");

                    b.Property<string>("FechaSistemaUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("fechasistemausercrea");

                    b.HasKey("FechaSistemaId");

                    b.HasIndex("FechaSistemaFecha")
                        .IsUnique()
                        .HasDatabaseName("ufechasistemaf");

                    b.ToTable("fechasistema");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Fondo", b =>
                {
                    b.Property<long>("FondoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fondoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FondoId"));

                    b.Property<string>("FondoDescripcion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("fondodescripcion");

                    b.Property<bool>("FondoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("fondoestaactivo");

                    b.Property<DateTime>("FondoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fondofechacreacion");

                    b.Property<DateTime?>("FondoFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fondofechamodifica");

                    b.Property<string>("FondoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fondonombre");

                    b.Property<decimal>("FondoSaldoActual")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fondosaldoactual");

                    b.Property<decimal>("FondoSaldoInicial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fondosaldoinicial");

                    b.Property<string>("FondoUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("fondousercrea");

                    b.Property<string>("FondoUserModifica")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("fondousermodifica");

                    b.Property<long>("MonedaId")
                        .HasColumnType("bigint")
                        .HasColumnName("monedaid");

                    b.Property<long>("TipoFondoId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipofondoid");

                    b.HasKey("FondoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("TipoFondoId");

                    b.ToTable("fondo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FondoMovimiento", b =>
                {
                    b.Property<long>("FondoMovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fondomovimientoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FondoMovimientoId"));

                    b.Property<long>("FondoId")
                        .HasColumnType("bigint")
                        .HasColumnName("fondoid");

                    b.Property<string>("FondoMovimientoConcepto")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("fondomovimientoconcepto");

                    b.Property<DateTime>("FondoMovimientoFecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fondomovimientofecha");

                    b.Property<DateTime>("FondoMovimientoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fondomovimientofechacreacion");

                    b.Property<decimal>("FondoMovimientoMonto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fondomovimientomonto");

                    b.Property<string>("FondoMovimientoTipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("fondomovimientotipo");

                    b.Property<string>("FondoMovimientoUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("fondomovimientousercrea");

                    b.Property<long?>("TransaccionId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaccionid");

                    b.HasKey("FondoMovimientoId");

                    b.HasIndex("FondoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("fondomovimiento");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FormaPago", b =>
                {
                    b.Property<long>("FormaPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("formapagoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FormaPagoId"));

                    b.Property<string>("FormaPagoDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("formapagodescripcion");

                    b.Property<bool>("FormaPagoEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("formapagoestaactiva");

                    b.Property<string>("FormaPagoNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("formapaganombre");

                    b.HasKey("FormaPagoId");

                    b.ToTable("formapago");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FrecuenciaPago", b =>
                {
                    b.Property<long>("FrecuenciaPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("frecuenciapagoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("FrecuenciaPagoId"));

                    b.Property<short>("FrecuenciaPagoDias")
                        .HasColumnType("smallint")
                        .HasColumnName("frecuenciapagodias");

                    b.Property<bool>("FrecuenciaPagoEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("frecuenciapagoestaactiva");

                    b.Property<string>("FrecuenciaPagoNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("frecuenciapaganombre");

                    b.HasKey("FrecuenciaPagoId");

                    b.ToTable("frecuenciapago");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Garantia", b =>
                {
                    b.Property<long>("GarantiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("garantiaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GarantiaId"));

                    b.Property<long>("EstadoGarantiaId")
                        .HasColumnType("bigint")
                        .HasColumnName("estadogarantiaid");

                    b.Property<string>("GarantiaDescripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("garantiadescripcion");

                    b.Property<DateTime>("GarantiaFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("garantiafechacreacion");

                    b.Property<DateTime?>("GarantiaFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("garantiafechamodifica");

                    b.Property<string>("GarantiaObservaciones")
                        .HasColumnType("text")
                        .HasColumnName("garantiaobservaciones");

                    b.Property<string>("GarantiaUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("garantiausercrea");

                    b.Property<string>("GarantiaUserModifica")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("garantiausermodifica");

                    b.Property<decimal?>("GarantiaValorComercial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("garantiavalorcomercial");

                    b.Property<decimal?>("GarantiaValorRealizable")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("garantiavalorrealizable");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.Property<long>("TipoGarantiaId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipogarantiaid");

                    b.HasKey("GarantiaId");

                    b.HasIndex("EstadoGarantiaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoGarantiaId");

                    b.ToTable("garantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.GarantiaDocumento", b =>
                {
                    b.Property<long>("GarantiaDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("garantiadocumentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GarantiaDocumentoId"));

                    b.Property<DateTime>("GarantiaDocumentoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("garantiadocumentofechacreacion");

                    b.Property<DateTime?>("GarantiaDocumentoFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("garantiadocumentofechamodifica");

                    b.Property<string>("GarantiaDocumentoPath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("garantiadocumentopath");

                    b.Property<string>("GarantiaDocumentoTipo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("garantiadocumentotipo");

                    b.Property<long>("GarantiaId")
                        .HasColumnType("bigint")
                        .HasColumnName("garantiaid");

                    b.HasKey("GarantiaDocumentoId");

                    b.HasIndex("GarantiaId");

                    b.ToTable("garantiadocumento");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Moneda", b =>
                {
                    b.Property<long>("MonedaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("monedaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MonedaId"));

                    b.Property<string>("MonedaCodigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("monedacodigo");

                    b.Property<bool>("MonedaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("monedaestaactiva");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("monedanombre");

                    b.Property<string>("MonedaSimbolo")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("monedasimbolo");

                    b.HasKey("MonedaId");

                    b.ToTable("moneda");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.MovimientoPrestamo", b =>
                {
                    b.Property<long>("MovimientoPrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("movimientoprestamoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MovimientoPrestamoId"));

                    b.Property<long?>("FormaPagoId")
                        .HasColumnType("bigint")
                        .HasColumnName("formapagoid");

                    b.Property<DateTime>("MovimientoPrestamoFecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("movimientoprestamofecha");

                    b.Property<DateTime>("MovimientoPrestamoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("movimientoprestamofechacreacion");

                    b.Property<decimal>("MovimientoPrestamoMontoCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("movimientoprestamomontocapital");

                    b.Property<decimal>("MovimientoPrestamoMontoInteres")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("movimientoprestamomontointeres");

                    b.Property<decimal>("MovimientoPrestamoMontoMora")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("movimientoprestamomontomora");

                    b.Property<decimal>("MovimientoPrestamoMontoOtros")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("movimientoprestamomontootros");

                    b.Property<decimal>("MovimientoPrestamoMontoTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("movimientoprestamomontototal");

                    b.Property<string>("MovimientoPrestamoObservaciones")
                        .HasColumnType("text")
                        .HasColumnName("movimientoprestamoobservaciones");

                    b.Property<string>("MovimientoPrestamoTipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("movimientoprestamotipo");

                    b.Property<string>("MovimientoPrestamoUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("movimientoprestamousercrea");

                    b.Property<long>("PrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("prestamoid");

                    b.Property<long?>("TransaccionId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaccionid");

                    b.HasKey("MovimientoPrestamoId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PrestamoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("movimientoprestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.OperadorTelefono", b =>
                {
                    b.Property<long>("OperadorTelefonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("operadortelefonoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OperadorTelefonoId"));

                    b.Property<bool>("OperadorTelefonoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("operadortelefonoestaactivo");

                    b.Property<string>("OperadorTelefonoNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("operadortelefonombre");

                    b.HasKey("OperadorTelefonoId");

                    b.ToTable("operadortelefono");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Pais", b =>
                {
                    b.Property<long>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("paisid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PaisId"));

                    b.Property<string>("PaisCodigo")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("paiscodigo");

                    b.Property<bool>("PaisEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("paisestaactivo");

                    b.Property<string>("PaisNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("paisnombre");

                    b.HasKey("PaisId");

                    b.ToTable("pais");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ParametrosSistema", b =>
                {
                    b.Property<long>("ParametroSistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("parametrosistemaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ParametroSistemaId"));

                    b.Property<string>("ParametroSistemaLlave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("parametrosistemallave");

                    b.Property<string>("ParametrosSistemaDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("parametrossistemadescripcion");

                    b.Property<bool>("ParametrosSistemaEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("parametrossistemaestaactivo");

                    b.Property<string>("ParametrosSistemaTipoDato")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("parametrossistematipodato");

                    b.Property<string>("ParametrosSistemaValor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("parametrossistemavalor");

                    b.HasKey("ParametroSistemaId");

                    b.ToTable("parametrossistema");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Persona", b =>
                {
                    b.Property<long>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaId"));

                    b.Property<long?>("EstadoCivilId")
                        .HasColumnType("bigint")
                        .HasColumnName("estadocivilid");

                    b.Property<string>("PersonaDireccion")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("personadireccion");

                    b.Property<string>("PersonaEmail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("personaemail");

                    b.Property<bool>("PersonaEsCliente")
                        .HasColumnType("boolean")
                        .HasColumnName("personaescliente");

                    b.Property<bool>("PersonaEsEmpleado")
                        .HasColumnType("boolean")
                        .HasColumnName("personaesempleado");

                    b.Property<bool>("PersonaEsNatural")
                        .HasColumnType("boolean")
                        .HasColumnName("personaesnatural");

                    b.Property<bool>("PersonaEsProveedor")
                        .HasColumnType("boolean")
                        .HasColumnName("personaesproveedor");

                    b.Property<bool>("PersonaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("personaestaactiva");

                    b.Property<DateTime>("PersonaFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personafechacreacion");

                    b.Property<DateTime?>("PersonaFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personafechamodifica");

                    b.Property<DateTime>("PersonaFechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personafechanacimiento");

                    b.Property<string>("PersonaGeolocalizacion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("personageolocalizacion");

                    b.Property<string>("PersonaIdentificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("personaidentificacion");

                    b.Property<string>("PersonaNombreCompleto")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("personanombrecompleto");

                    b.Property<string>("PersonaPrimerApellido")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personaprimerapellido");

                    b.Property<string>("PersonaPrimerNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personaprimernombre");

                    b.Property<string>("PersonaSegundoApellido")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personasegundoapellido");

                    b.Property<string>("PersonaSegundoNombre")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personasegundonombre");

                    b.Property<string>("PersonaUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personausercrea");

                    b.Property<string>("PersonaUserModifica")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personausermodifica");

                    b.Property<long?>("SexoId")
                        .HasColumnType("bigint")
                        .HasColumnName("sexoid");

                    b.Property<long>("TipoIdentificacionId")
                        .HasColumnType("bigint")
                        .HasColumnName("tipoidentificacionid");

                    b.HasKey("PersonaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("PersonaIdentificacion")
                        .IsUnique()
                        .HasDatabaseName("upersona");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaActividad", b =>
                {
                    b.Property<long>("PersonaActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personaactividadid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaActividadId"));

                    b.Property<long>("ActividadEconomicaId")
                        .HasColumnType("bigint")
                        .HasColumnName("actividadeconomicaid");

                    b.Property<bool>("PersonaActividadEsPrincipal")
                        .HasColumnType("boolean")
                        .HasColumnName("personaactividadesprincipal");

                    b.Property<bool>("PersonaActividadEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("personaactividadestaactiva");

                    b.Property<DateTime?>("PersonaActividadFechaInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personaactividadfechainicio");

                    b.Property<decimal?>("PersonaActividadIngresoMensual")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("personaactividadingresomensual");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.HasKey("PersonaActividadId");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("personaactividad");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaConyuge", b =>
                {
                    b.Property<long>("PersonaConyugeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personaconyugeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaConyugeId"));

                    b.Property<DateTime>("ConyugeFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("conyugefechacreacion");

                    b.Property<DateTime?>("ConyugeFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("conyugefechamodifica");

                    b.Property<string>("ConyugeNombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("conyugenombre");

                    b.Property<string>("ConyugeTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("conyugetelefono");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.HasKey("PersonaConyugeId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("personaconyuge");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaDocumento", b =>
                {
                    b.Property<long>("PersonaDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personadocumentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaDocumentoId"));

                    b.Property<DateTime>("PersonaDocumentoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personadocumentofechacreacion");

                    b.Property<DateTime?>("PersonaDocumentoFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("personadocumentofechamodifica");

                    b.Property<string>("PersonaDocumentoPath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("personadocumentopath");

                    b.Property<string>("PersonaDocumentoTipo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("personadocumentotipo");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.HasKey("PersonaDocumentoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("personadocumento");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaReferencia", b =>
                {
                    b.Property<long>("PersonaReferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personareferenciaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaReferenciaId"));

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.Property<string>("PersonaReferenciaDireccion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("personareferenciadireccion");

                    b.Property<bool>("PersonaReferenciaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("personareferenciaestaactiva");

                    b.Property<string>("PersonaReferenciaNombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("personareferencianombre");

                    b.Property<string>("PersonaReferenciaParentesco")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("personareferenciaparentesco");

                    b.Property<string>("PersonaReferenciaTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("personareferenciatelefono");

                    b.HasKey("PersonaReferenciaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("personareferencia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaTelefono", b =>
                {
                    b.Property<long>("PersonaTelefonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("personatelefonoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PersonaTelefonoId"));

                    b.Property<long>("OperadorTelefonoId")
                        .HasColumnType("bigint")
                        .HasColumnName("operadortelefonoid");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.Property<string>("PersonaTelefoNumero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("personatelefonumero");

                    b.Property<bool>("PersonaTelefonoEsPrincipal")
                        .HasColumnType("boolean")
                        .HasColumnName("personatelefonoesprincipal");

                    b.Property<bool>("PersonaTelefonoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("personatelefonoestaactivo");

                    b.HasKey("PersonaTelefonoId");

                    b.HasIndex("OperadorTelefonoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("personatelefono");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Prestamo", b =>
                {
                    b.Property<long>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("prestamoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrestamoId"));

                    b.Property<long?>("DestinoCreditoId")
                        .HasColumnType("bigint")
                        .HasColumnName("destinocreditoid");

                    b.Property<long>("EstadoPrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("estadoprestamoid");

                    b.Property<long?>("FondoId")
                        .HasColumnType("bigint")
                        .HasColumnName("fondoid");

                    b.Property<long>("FrecuenciaPagoId")
                        .HasColumnType("bigint")
                        .HasColumnName("frecuenciapagoid");

                    b.Property<long>("MonedaId")
                        .HasColumnType("bigint")
                        .HasColumnName("monedaid");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint")
                        .HasColumnName("personaid");

                    b.Property<DateTime?>("PrestamoFechaAprobacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamofechaaprobacion");

                    b.Property<DateTime>("PrestamoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamofechacreacion");

                    b.Property<DateTime?>("PrestamoFechaDesembolso")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamofechadesembolso");

                    b.Property<DateTime?>("PrestamoFechaModifica")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamofechamodifica");

                    b.Property<DateTime?>("PrestamoFechaVencimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamofechavencimiento");

                    b.Property<decimal>("PrestamoMonto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamomonto");

                    b.Property<string>("PrestamoNumero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("prestamonumero");

                    b.Property<string>("PrestamoObservaciones")
                        .HasColumnType("text")
                        .HasColumnName("prestamoobservaciones");

                    b.Property<int>("PrestamoPlazo")
                        .HasColumnType("integer")
                        .HasColumnName("prestamoplazo");

                    b.Property<decimal>("PrestamoSaldoCapital")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamosaldocapital");

                    b.Property<decimal>("PrestamoSaldoInteres")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamosaldointeres");

                    b.Property<decimal>("PrestamoSaldoMora")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamosaldomora");

                    b.Property<decimal>("PrestamoTasaInteres")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("prestamotasainteres");

                    b.Property<string>("PrestamoUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("prestamousercrea");

                    b.Property<string>("PrestamoUserModifica")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("prestamousermodifica");

                    b.Property<long>("SucursalId")
                        .HasColumnType("bigint")
                        .HasColumnName("sucursalid");

                    b.HasKey("PrestamoId");

                    b.HasIndex("DestinoCreditoId");

                    b.HasIndex("EstadoPrestamoId");

                    b.HasIndex("FondoId");

                    b.HasIndex("FrecuenciaPagoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("SucursalId");

                    b.ToTable("prestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoComponente", b =>
                {
                    b.Property<long>("PrestamoComponenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("prestamocomponenteid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrestamoComponenteId"));

                    b.Property<long>("ComponentePrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("componenteprestamoid");

                    b.Property<long>("EstadoComponenteId")
                        .HasColumnType("bigint")
                        .HasColumnName("estadocomponenteid");

                    b.Property<DateTime?>("PrestamoComponenteFechaVencimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamocomponentefechavencimiento");

                    b.Property<decimal>("PrestamoComponenteMonto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamocomponentemonto");

                    b.Property<int?>("PrestamoComponenteNumeroCuota")
                        .HasColumnType("integer")
                        .HasColumnName("prestamocomponentenumerocuota");

                    b.Property<decimal>("PrestamoComponenteSaldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamocomponentesaldo");

                    b.Property<long>("PrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("prestamoid");

                    b.HasKey("PrestamoComponenteId");

                    b.HasIndex("ComponentePrestamoId");

                    b.HasIndex("EstadoComponenteId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("prestamocomponente");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoDocumento", b =>
                {
                    b.Property<long>("PrestamoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("prestamo_documentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrestamoDocumentoId"));

                    b.Property<DateTime>("PrestamoDocumentoFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamo_documento_fecha_creacion");

                    b.Property<DateTime?>("PrestamoDocumentoFechaPrimeraImpresion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamo_documento_fecha_primera_impresion");

                    b.Property<DateTime?>("PrestamoDocumentoFechaUltimaImpresion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamo_documento_fecha_ultima_impresion");

                    b.Property<string>("PrestamoDocumentoHash")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prestamo_documento_hash");

                    b.Property<string>("PrestamoDocumentoRuta")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("prestamo_documento_ruta");

                    b.Property<string>("PrestamoDocumentoTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prestamo_documento_tipo");

                    b.Property<string>("PrestamoDocumentoUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("prestamo_documento_user_crea");

                    b.Property<int>("PrestamoDocumentoVecesImpreso")
                        .HasColumnType("integer")
                        .HasColumnName("prestamo_documento_veces_impreso");

                    b.Property<long>("PrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("prestamoid");

                    b.HasKey("PrestamoDocumentoId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("prestamo_documento");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoDocumentoImpresion", b =>
                {
                    b.Property<long>("PrestamoDocumentoImpresionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("prestamo_documento_impresionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrestamoDocumentoImpresionId"));

                    b.Property<long>("PrestamoDocumentoId")
                        .HasColumnType("bigint")
                        .HasColumnName("prestamo_documentoid");

                    b.Property<DateTime>("PrestamoDocumentoImpresionFecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamo_documento_impresion_fecha");

                    b.Property<string>("PrestamoDocumentoImpresionIp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prestamo_documento_impresion_ip");

                    b.Property<string>("PrestamoDocumentoImpresionObservaciones")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("prestamo_documento_impresion_observaciones");

                    b.Property<string>("PrestamoDocumentoImpresionUsuario")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("prestamo_documento_impresion_usuario");

                    b.HasKey("PrestamoDocumentoImpresionId");

                    b.HasIndex("PrestamoDocumentoId");

                    b.ToTable("prestamo_documento_impresion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoGarantia", b =>
                {
                    b.Property<long>("PrestamoGarantiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("prestamogarantiaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrestamoGarantiaId"));

                    b.Property<long>("GarantiaId")
                        .HasColumnType("bigint")
                        .HasColumnName("garantiaid");

                    b.Property<bool>("PrestamoGarantiaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("prestamogarantiaestaactiva");

                    b.Property<DateTime>("PrestamoGarantiaFechaAsignacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("prestamogarantiafechaasignacion");

                    b.Property<decimal>("PrestamoGarantiaMontoComprometido")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prestamogarantiamontocomprometido");

                    b.Property<long>("PrestamoId")
                        .HasColumnType("bigint")
                        .HasColumnName("prestamoid");

                    b.HasKey("PrestamoGarantiaId");

                    b.HasIndex("GarantiaId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("prestamogarantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Sexo", b =>
                {
                    b.Property<long>("SexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("sexoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SexoId"));

                    b.Property<string>("SexoDescripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sexodescripcion");

                    b.Property<bool>("SexoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("sexoestaactivo");

                    b.Property<string>("SexoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sexonombre");

                    b.HasKey("SexoId");

                    b.ToTable("sexo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Sucursal", b =>
                {
                    b.Property<long>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("sucursalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SucursalId"));

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresaid");

                    b.Property<string>("SucursalDireccion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("sucursaldireccion");

                    b.Property<bool>("SucursalEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("sucursalestaactiva");

                    b.Property<string>("SucursalNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sucursalnombre");

                    b.Property<string>("SucursalTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sucursaltelefono");

                    b.HasKey("SucursalId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("sucursal");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoCuenta", b =>
                {
                    b.Property<long>("TipoCuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipocuentaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoCuentaId"));

                    b.Property<string>("TipoCuentaDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("tipocuentadescripcion");

                    b.Property<bool>("TipoCuentaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("tipocuentaestaactiva");

                    b.Property<string>("TipoCuentaNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("tipocuentanombre");

                    b.HasKey("TipoCuentaId");

                    b.ToTable("tipocuenta");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoFondo", b =>
                {
                    b.Property<long>("TipoFondoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipofondoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoFondoId"));

                    b.Property<string>("TipoFondoDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("tipofondodescripcion");

                    b.Property<bool>("TipoFondoEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("tipofondoestaactivo");

                    b.Property<string>("TipoFondoNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("tipofondonombre");

                    b.HasKey("TipoFondoId");

                    b.ToTable("tipofondo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoGarantia", b =>
                {
                    b.Property<long>("TipoGarantiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipogarantiaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoGarantiaId"));

                    b.Property<string>("TipoGarantiaDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("tipogarantiadescripcion");

                    b.Property<bool>("TipoGarantiaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("tipogarantiaestaactiva");

                    b.Property<string>("TipoGarantiaNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("tipogarantianombre");

                    b.HasKey("TipoGarantiaId");

                    b.ToTable("tipogarantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoIdentificacion", b =>
                {
                    b.Property<long>("TipoIdentificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tipoidentificacionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TipoIdentificacionId"));

                    b.Property<string>("TipoIdentificacionDescripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("tipoidentificaciondescripcion");

                    b.Property<bool>("TipoIdentificacionEstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("tipoidentificacionestaactivo");

                    b.Property<string>("TipoIdentificacionNombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("tipoidentificacionnombre");

                    b.HasKey("TipoIdentificacionId");

                    b.ToTable("tipoidentificacion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Transaccion", b =>
                {
                    b.Property<long>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("transaccionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TransaccionId"));

                    b.Property<long?>("CuentaBancariaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cuentabancariaid");

                    b.Property<string>("TransaccionConcepto")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("transaccionconcepto");

                    b.Property<DateTime>("TransaccionFecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transaccionfecha");

                    b.Property<DateTime>("TransaccionFechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transaccionfechacreacion");

                    b.Property<decimal>("TransaccionMonto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("transaccionmonto");

                    b.Property<string>("TransaccionNumero")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("transaccionnumero");

                    b.Property<string>("TransaccionReferencia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("transaccionreferencia");

                    b.Property<string>("TransaccionTipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("transacciontipo");

                    b.Property<string>("TransaccionUserCrea")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("transaccionusercrea");

                    b.HasKey("TransaccionId");

                    b.HasIndex("CuentaBancariaId");

                    b.ToTable("transaccion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.UbicacionGeografica", b =>
                {
                    b.Property<long>("UbicacionGeograficaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ubicaciongeograficaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UbicacionGeograficaId"));

                    b.Property<long?>("PaisId")
                        .HasColumnType("bigint")
                        .HasColumnName("paisid");

                    b.Property<string>("UbicacionGeograficaCodigo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ubicaciongeograficacodigo");

                    b.Property<bool>("UbicacionGeograficaEstaActiva")
                        .HasColumnType("boolean")
                        .HasColumnName("ubicaciongeograficaestaactiva");

                    b.Property<short>("UbicacionGeograficaNivel")
                        .HasColumnType("smallint")
                        .HasColumnName("ubicaciongeograficanivel");

                    b.Property<string>("UbicacionGeograficaNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ubicaciongeograficanombre");

                    b.Property<long?>("UbicacionGeograficaPadre")
                        .HasColumnType("bigint")
                        .HasColumnName("ubicaciongeograficapadre");

                    b.HasKey("UbicacionGeograficaId");

                    b.HasIndex("PaisId");

                    b.HasIndex("UbicacionGeograficaPadre");

                    b.ToTable("ubicaciongeografica");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ActividadEconomica", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.ActividadCnbs", "ActividadCnbs")
                        .WithMany("ActividadesEconomicas")
                        .HasForeignKey("ActividadCnbsId");

                    b.Navigation("ActividadCnbs");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.CuentaBancaria", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Banco", "Banco")
                        .WithMany("CuentasBancarias")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.TipoCuenta", "TipoCuenta")
                        .WithMany("CuentasBancarias")
                        .HasForeignKey("TipoCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Moneda");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Fondo", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Moneda", "Moneda")
                        .WithMany("Fondos")
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.TipoFondo", "TipoFondo")
                        .WithMany("Fondos")
                        .HasForeignKey("TipoFondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moneda");

                    b.Navigation("TipoFondo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FondoMovimiento", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Fondo", "Fondo")
                        .WithMany("FondoMovimientos")
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Transaccion", "Transaccion")
                        .WithMany("FondoMovimientos")
                        .HasForeignKey("TransaccionId");

                    b.Navigation("Fondo");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Garantia", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.EstadoGarantia", "EstadoGarantia")
                        .WithMany("Garantias")
                        .HasForeignKey("EstadoGarantiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany("Garantias")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.TipoGarantia", "TipoGarantia")
                        .WithMany("Garantias")
                        .HasForeignKey("TipoGarantiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoGarantia");

                    b.Navigation("Persona");

                    b.Navigation("TipoGarantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.GarantiaDocumento", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Garantia", "Garantia")
                        .WithMany()
                        .HasForeignKey("GarantiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garantia");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.MovimientoPrestamo", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.FormaPago", "FormaPago")
                        .WithMany("MovimientosPrestamo")
                        .HasForeignKey("FormaPagoId");

                    b.HasOne("AlphaCredit.Api.Models.Prestamo", "Prestamo")
                        .WithMany("MovimientosPrestamo")
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Transaccion", "Transaccion")
                        .WithMany("MovimientosPrestamo")
                        .HasForeignKey("TransaccionId");

                    b.Navigation("FormaPago");

                    b.Navigation("Prestamo");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Persona", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.EstadoCivil", "EstadoCivil")
                        .WithMany("Personas")
                        .HasForeignKey("EstadoCivilId");

                    b.HasOne("AlphaCredit.Api.Models.Sexo", "Sexo")
                        .WithMany("Personas")
                        .HasForeignKey("SexoId");

                    b.HasOne("AlphaCredit.Api.Models.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("Personas")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCivil");

                    b.Navigation("Sexo");

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaActividad", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.ActividadEconomica", "ActividadEconomica")
                        .WithMany("PersonaActividades")
                        .HasForeignKey("ActividadEconomicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany("PersonaActividades")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActividadEconomica");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaConyuge", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithOne("PersonaConyuge")
                        .HasForeignKey("AlphaCredit.Api.Models.PersonaConyuge", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaDocumento", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaReferencia", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PersonaTelefono", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.OperadorTelefono", "OperadorTelefono")
                        .WithMany("PersonaTelefonos")
                        .HasForeignKey("OperadorTelefonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany("PersonaTelefonos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperadorTelefono");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Prestamo", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.DestinoCredito", "DestinoCredito")
                        .WithMany("Prestamos")
                        .HasForeignKey("DestinoCreditoId");

                    b.HasOne("AlphaCredit.Api.Models.EstadoPrestamo", "EstadoPrestamo")
                        .WithMany("Prestamos")
                        .HasForeignKey("EstadoPrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Fondo", "Fondo")
                        .WithMany()
                        .HasForeignKey("FondoId");

                    b.HasOne("AlphaCredit.Api.Models.FrecuenciaPago", "FrecuenciaPago")
                        .WithMany("Prestamos")
                        .HasForeignKey("FrecuenciaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Moneda", "Moneda")
                        .WithMany("Prestamos")
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Persona", "Persona")
                        .WithMany("Prestamos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Sucursal", "Sucursal")
                        .WithMany("Prestamos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinoCredito");

                    b.Navigation("EstadoPrestamo");

                    b.Navigation("Fondo");

                    b.Navigation("FrecuenciaPago");

                    b.Navigation("Moneda");

                    b.Navigation("Persona");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoComponente", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.ComponentePrestamo", "ComponentePrestamo")
                        .WithMany("PrestamoComponentes")
                        .HasForeignKey("ComponentePrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.EstadoComponente", "EstadoComponente")
                        .WithMany("PrestamoComponentes")
                        .HasForeignKey("EstadoComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Prestamo", "Prestamo")
                        .WithMany("PrestamoComponentes")
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentePrestamo");

                    b.Navigation("EstadoComponente");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoDocumento", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Prestamo", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoDocumentoImpresion", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.PrestamoDocumento", "PrestamoDocumento")
                        .WithMany("Impresiones")
                        .HasForeignKey("PrestamoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestamoDocumento");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoGarantia", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Garantia", "Garantia")
                        .WithMany("PrestamoGarantias")
                        .HasForeignKey("GarantiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaCredit.Api.Models.Prestamo", "Prestamo")
                        .WithMany("PrestamoGarantias")
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garantia");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Sucursal", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Empresa", "Empresa")
                        .WithMany("Sucursales")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Transaccion", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.CuentaBancaria", "CuentaBancaria")
                        .WithMany("Transacciones")
                        .HasForeignKey("CuentaBancariaId");

                    b.Navigation("CuentaBancaria");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.UbicacionGeografica", b =>
                {
                    b.HasOne("AlphaCredit.Api.Models.Pais", "Pais")
                        .WithMany("UbicacionesGeograficas")
                        .HasForeignKey("PaisId");

                    b.HasOne("AlphaCredit.Api.Models.UbicacionGeografica", "UbicacionPadre")
                        .WithMany("UbicacionesHijas")
                        .HasForeignKey("UbicacionGeograficaPadre")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Pais");

                    b.Navigation("UbicacionPadre");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ActividadCnbs", b =>
                {
                    b.Navigation("ActividadesEconomicas");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ActividadEconomica", b =>
                {
                    b.Navigation("PersonaActividades");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Banco", b =>
                {
                    b.Navigation("CuentasBancarias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.ComponentePrestamo", b =>
                {
                    b.Navigation("PrestamoComponentes");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.CuentaBancaria", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.DestinoCredito", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Empresa", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoCivil", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoComponente", b =>
                {
                    b.Navigation("PrestamoComponentes");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoGarantia", b =>
                {
                    b.Navigation("Garantias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.EstadoPrestamo", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Fondo", b =>
                {
                    b.Navigation("FondoMovimientos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FormaPago", b =>
                {
                    b.Navigation("MovimientosPrestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.FrecuenciaPago", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Garantia", b =>
                {
                    b.Navigation("PrestamoGarantias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Moneda", b =>
                {
                    b.Navigation("Fondos");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.OperadorTelefono", b =>
                {
                    b.Navigation("PersonaTelefonos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Pais", b =>
                {
                    b.Navigation("UbicacionesGeograficas");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Persona", b =>
                {
                    b.Navigation("Garantias");

                    b.Navigation("PersonaActividades");

                    b.Navigation("PersonaConyuge");

                    b.Navigation("PersonaTelefonos");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Prestamo", b =>
                {
                    b.Navigation("MovimientosPrestamo");

                    b.Navigation("PrestamoComponentes");

                    b.Navigation("PrestamoGarantias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.PrestamoDocumento", b =>
                {
                    b.Navigation("Impresiones");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Sexo", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Sucursal", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoCuenta", b =>
                {
                    b.Navigation("CuentasBancarias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoFondo", b =>
                {
                    b.Navigation("Fondos");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoGarantia", b =>
                {
                    b.Navigation("Garantias");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.TipoIdentificacion", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.Transaccion", b =>
                {
                    b.Navigation("FondoMovimientos");

                    b.Navigation("MovimientosPrestamo");
                });

            modelBuilder.Entity("AlphaCredit.Api.Models.UbicacionGeografica", b =>
                {
                    b.Navigation("UbicacionesHijas");
                });
#pragma warning restore 612, 618
        }
    }
}
